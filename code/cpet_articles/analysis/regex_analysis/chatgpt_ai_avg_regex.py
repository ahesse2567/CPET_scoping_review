import re

def get_matches(text):
    pattern = re.compile(r'averaged\s+over\s+(\d{1,2})\s+[a-z]|(\d{1,2})-[a-z]\s+rolling\s+average|(\d{1,2})[a-z]\s+moving\s+average|averaged\s+over\s+(\d{1,2})\xa0[a-z]\s+intervals|averaging\s+(\d{1,2})-[a-z]\s+intervals|over\s+the\s+|(EVERY|LAST)\s+(\d{1,2})\s+SECONDS|AVERAGED\s+ACROSS\s+THE\s+LAST\s+MINUTE|MEANS\s+WERE\s+CALCULATED\s+AS\s+THE\s+AVERAGE\s+VALUES\s+OF\s+THE\s+LAST\s+MIN|HIGHEST\s+(\d{1,2})-[a-z]\s+average', re.IGNORECASE)
    matches = []
    for match in pattern.finditer(text):
        matches.append(match.group())
    return matches if matches else None

# create a running list of the major variations on the phrases the regex needs to recognize
# r"(highest|last)?\s?\d{1,2}\s?(s|sec(ond)?s?)?\s?(averages?|intervals?|epochs?)?(\s?(every|per|over( a)?|into|for each|during the))?\s?(smoothed|averaged|recorded|mean value of the final|mean)?\s?((\d{1,2}|minute|five|eight)-)?(s|sec(ond)?s?|min(ute)?s?)?\s?(averages?|intervals?|epochs?|points?|breath(s|ing)? median filter|segment|period|min|consecutive measurements|value)?(\s?(rolling|sliding|reduced to the)?)?"


# using https://ibnuhx.com/regex-generator/?ref=madewithvuejs.com
# /(?:means were calculated as the average values of the last|average(?: value o(?:ver the last 2|f the last)|d \\nfor each 10)) min|(?:3(?: highest 10\-second\\nconsecutive measurement|\-breath moving average at 5\-s interval|0(?: sec(?:ond)?|\-s) average)|rolling averaged to provide\\n20\-s value|averaged (?:over (?:5 consecutive breat|twenty\-second epoc)h|every 30 second)|(?:averaged into\\n30\-second|15s) interval|(?:fifteen\-breath rolling|thirty\-second) average|(?:over the last sixty|sampled\\nevery 30|last ten) second|smoothed e(?:very five\\n|ach 5 )point|reduced to the mean of 15|last 30\\xa0|15\-s epoch)s|highest(?:\\n(?:average reached during the last 30 s|recorded 30 s mean)| (?:values over a 30\-s interval|30(?:(?: s average |\-s\\n)value|s\-average| s)))|averaged for each 2\-min(?:ute)? segment|(?:averaged (?:across the last|every|per) minut|10\-s average valu)e|(?:recorded over a 30\\xa0s perio|over the highest 30s perio|fifteen\-second average)d|sliding 5\-breath median \uFB01lter|mean value of the final 30 s|(?:rolling eight\-breath|11\-breath rolling|(?:8\- |5\-)breath moving|3\-point \\nmoving|20\-s) average|averaged every 30 sec|last 15 s/

# using https://www.javainuse.com/rexgenerator
# (?:mean(?:s\swere\scalculated\sas\sthe\saverage\svalues\sof\sthe\slast\smin|\svalue\sof\sthe\sfinal\s\d\d\ss)|(?:\d\shighest\s\d\d\-second\\nconsecutive\smeasurement|\d(?:\-breath\smoving\saverage\sat\s\d\-|\d)s\sinterval|r(?:olling\saveraged\sto\sprovide\\n\d\d\-s\svalue|educed\sto\sthe\smean\sof\s\d\d)|averaged\s(?:over\s(?:\d\sconsecutive\sbreat|twenty\-second\sepoc)h|into\\n\d\d\-second\sinterval)|(?:fifteen\-breath\srolling|(?:(?:thirty\-|\d\d\s)second|\d\d\ssec))\saverage|smoothed\se(?:very\sfive\\n|ach\s\d\s)point|over\sthe\slast\ssixty\ssecond|averaged\severy\s\d\d\ssecond|(?:sampled\\nevery\s\d\d|last\sten)\ssecond|last\s\d\d\\xa\d|\d\d\-s\sepoch|last\s\d\d\s)s|highest\\naverage\sreached\sduring\sthe\slast\s\d\d\ss|highest\svalues\sover\sa\s\d\d\-s\sinterval|averaged\sfor\seach\s\d\-min(?:ute)?\ssegment|average(?:\svalue\sover\sthe\slast\s|d\s\\nfor\seach\s\d)\d\smin|(?:averaged\s(?:across\sthe\slast|(?:every|per))\sminut|highest\s\d\d(?:\ss\saverage\s|\-s\\n)valu|\d\d\-s\saverage\svalu)e|recorded\sover\sa\s\d\d\\xa\ds\speriod|sliding\s\d\-breath\smedian\sÔ¨Ålter|average\svalue\sof\sthe\slast\smin|rolling\seight\-breath\saverage|over\sthe\shighest\s\d\ds\speriod|highest\\nrecorded\s\d\d\ss\smean|\d\-(?:point\s\\n|\sbreath\s)moving\saverage|\d(?:\-breath\smoving|\d\-s)\saverage|fifteen\-second\saveraged|averaged\severy\s\d\d\ssec|highest\s\d\ds\-average|\d\d\-(?:breath\srolling|s\saverages)|highest\s\d\d\ss)